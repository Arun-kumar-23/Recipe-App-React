{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipes.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","console","log","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2PAqBeA,EAlBA,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,YACrC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BAEIG,EAAYI,KAAI,SAACC,GAAD,OACZ,6BAAKA,EAAWC,YAIxB,4BAAIR,IACJ,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCsC1CC,EAjDH,WACZ,IAEA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAGAC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBC,QAAQC,IAAIF,GACZX,EAAWW,EAAKG,MAJC,2CAAH,qDAiBd,OACE,sBAAKzB,UAAU,MAAf,UACE,uBAAM0B,SANM,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,IAIsBZ,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SAZ5C,SAACJ,GACpBJ,QAAQC,IAAIZ,GACZC,EAAUc,EAAEK,OAAOF,UAWb,wBAAQ9B,UAAU,gBAAgB6B,KAAK,SAAvC,uBAEJ,qBAAK7B,UAAU,UAAf,SACCU,EAAQP,KAAI,SAAAD,GAAM,OACnB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAeG,EAAOA,OAAOH,aAJxBG,EAAOA,OAAO+B,gBC9BRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,0B","file":"static/js/main.1618037b.chunk.js","sourcesContent":["import React from 'react'\nimport style from './recipes.module.css'\n\nconst Recipe = ({title, calories, image, ingredients})=> {\n    return (\n        <div className={style.recipe}>\n            <h1>{title}</h1>\n            <ol>\n            {\n                ingredients.map((ingredient) =>(\n                    <li>{ingredient.text}</li>\n                ))\n            }\n            </ol>\n            <p>{calories}</p>\n            <img className={style.image} src={image} alt=\"\"></img>\n            \n        </div>\n    )\n}\n\nexport default Recipe\n","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\nconst App = () =>{\nconst API_ID = \"883b5156\"\nconst API_Key = \"b67081f3631176fcbad9d589ea717138\"\nconst [recipes, setRecipes] = useState([])\nconst [search, setSearch] = useState(\"\")\nconst [query, setQuery] = useState(\"chicken\")\n\n\nuseEffect(()=>{\n  getRecipes()\n},[query])\n\nconst getRecipes = async() =>{\n  const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_Key}`)\n  const data = await response.json()\n  console.log(data)\n  setRecipes(data.hits)\n  }\n\n\nconst updateSearch = (e) =>{\n  console.log(search)\n  setSearch(e.target.value)\n}\n\nconst getSearch = e =>{\n  e.preventDefault()\n  setQuery(search)\n}\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n    <div className=\"recipes\">\n    {recipes.map(recipe =>(\n    <Recipe \n    key={recipe.recipe.label}\n    title={recipe.recipe.label} \n    calories={recipe.recipe.calories} \n    image={recipe.recipe.image}\n    ingredients = {recipe.recipe.ingredients}/>\n    ))}\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipes_recipe__c6Iu2\",\"image\":\"recipes_image__wyzim\"};"],"sourceRoot":""}